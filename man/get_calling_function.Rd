% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functionfuntions.R
\name{get_calling_function}
\alias{get_calling_function}
\title{Get Calling Function}
\usage{
get_calling_function(n_function_calls_ago = 1, verbose = TRUE)
}
\arguments{
\item{n_function_calls_ago}{position in the stack trace we're interested in. By default will return the name of the function containing the line: get_calling_function(). Setting to 1 will get the call 1 up in the stack trace.(integer)}

\item{verbose}{print informative messages}
}
\value{
the function call as a string. If function is called from the base environment or n_function_calls_ago is set higher than the number of calls in the stack trace, will return 'base' (string)
}
\description{
Looks through stack trace to identify the function that called the current function.
}
\examples{
wrapper <- function(n_function_calls_ago=1, verbose=TRUE){
  get_calling_function(n_function_calls_ago, verbose)
}

wrapper() # Returns"wrapper()"

wrapper_wrapper <- function(n_function_calls_ago=1, verbose=TRUE){
  wrapper(n_function_calls_ago, verbose=verbose)
}

wrapper_wrapper() # Returns "wrapper(n_function_calls_ago, verbose = verbose)"
wrapper_wrapper(2) # Returns "wrapper_wrapper(2)"
wrapper_wrapper(100, verbose=FALSE) # Returns "base"
wrapper_wrapper(100, verbose=TRUE) # Returns "base" + message

}
